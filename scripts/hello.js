// Commands:
//   hubot hola - Saludo personalizado con opciones aleatorias
//   hubot ayuda - Muestra los comandos disponibles
//   hubot clima en <ciudad> - Simula informaci√≥n del clima
//   hubot chiste - Cuenta un chiste aleatorio
//   hubot motivame - Env√≠a una frase motivacional
//   hubot ping - Comprueba si el bot est√° funcionando
//   hubot hora - Muestra la hora y fecha actual
//   hubot lanzar moneda - Lanza una moneda (cara o cruz)
//   hubot recomienda <algo> - Genera recomendaciones seg√∫n la categor√≠a
//   hubot echo <mensaje> - Repite el mensaje que le env√≠es

module.exports = function (robot) {
  // Funci√≥n para obtener una respuesta aleatoria de un array
  function respuestaAleatoria(opciones) {
    return opciones[Math.floor(Math.random() * opciones.length)];
  }

  // Funci√≥n para verificar si el bot puede responder en Livechat
  function canBotRespond(roomId, isLivechat) {
    if (!isLivechat) return true;

    if (global.canBotRespondInLivechat) {
      return global.canBotRespondInLivechat(roomId);
    }

    return true; // Fallback
  }

  // Comando: hola
  robot.respond(/hola|hey|saludos|hi|hello/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    if (isLivechat && !canBotRespond(res.message.room, isLivechat)) {
      return; // Bot silenciado en Livechat
    }

    const saludos = [
      "¬°Hola! ¬øEn qu√© puedo ayudarte hoy?",
      "¬°Hey! Me alegra verte por aqu√≠. ¬øQu√© necesitas?",
      "¬°Saludos! Estoy listo para asistirte.",
      "¬°Qu√© tal! ¬øC√≥mo va todo? ¬øEn qu√© puedo ayudarte?",
      "¬°Hola! Un placer charlar contigo. ¬øNecesitas algo?",
      "¬°Hey, qu√© bueno verte! ¬øEn qu√© est√°s trabajando hoy?",
    ];
    res.reply(respuestaAleatoria(saludos));
  });

  // Comando: ayuda
  robot.respond(/ayuda|help|comandos|commands/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    if (isLivechat && !canBotRespond(res.message.room, isLivechat)) {
      return;
    }

    let helpMessage = `Aqu√≠ tienes mis comandos disponibles:
- *hola* - Te saludo de forma personalizada
- *ayuda* - Muestro esta lista de comandos
- *clima en [ciudad]* - Te doy el clima simulado
- *chiste* - Te cuento un chiste aleatorio
- *motivame* - Te env√≠o una frase motivacional
- *ping* - Verifico que estoy funcionando
- *hora* - Te muestro la fecha y hora actual
- *lanzar moneda* - Lanzo una moneda
- *recomienda [categor√≠a]* - Te doy recomendaciones
- *echo [mensaje]* - Repito tu mensaje
- *pregunta [consulta]* - Respondo usando AI`;

    // Agregar comandos espec√≠ficos de Livechat si aplica
    if (isLivechat) {
      helpMessage += `\n\nüîß **Comandos para agentes:**
- *tomar control* - Agente toma control del chat
- *devolver bot* - Devuelve control al bot
- *estado chat* - Muestra estado actual del chat`;
    }

    res.send(helpMessage);
  });

  // Comando: ping
  robot.respond(/ping/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    if (isLivechat && !canBotRespond(res.message.room, isLivechat)) {
      return;
    }

    const tiempoRespuesta = Math.floor(Math.random() * 20);
    res.send(`PONG! üèì Tiempo de respuesta: ${tiempoRespuesta}ms`);
  });

  // Comando: hora
  robot.respond(/hora|time|fecha|date/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    if (isLivechat && !canBotRespond(res.message.room, isLivechat)) {
      return;
    }

    const ahora = new Date();
    const opciones = {
      weekday: "long",
      year: "numeric",
      month: "long",
      day: "numeric",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
    };
    res.send(
      `üìÖ Fecha y hora actual: ${ahora.toLocaleDateString("es-ES", opciones)}`
    );
  });

  // Comando: chiste
  robot.respond(/chiste|joke|divierteme/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    if (isLivechat && !canBotRespond(res.message.room, isLivechat)) {
      return;
    }

    const chistes = [
      "¬øPor qu√© los programadores prefieren el fr√≠o? Porque tienen problemas con el calor-sint-axis.",
      "¬øC√≥mo se llama un programador en el fondo del mar? Desarrollador full-stack overflow.",
      "¬øPor qu√© Python no lleva corbata? Porque usa bytecode.",
      "¬øC√≥mo organiza una fiesta un programador? Pues... invita a todo el array.",
      "Hab√≠a una vez un cient√≠fico tan, pero tan malo con las bromas que hasta los elementos de la tabla peri√≥dica dejaron de reaccionar.",
      "Un √°tomo tropez√≥ y le preguntaron: '¬øEst√°s bien?' Y respondi√≥: 'Perd√≠ un electr√≥n'. '¬øEst√°s seguro?', le preguntaron. 'S√≠, estoy positivo'.",
    ];
    res.send(`üòÇ ${respuestaAleatoria(chistes)}`);
  });

  // Comando: motivame
  robot.respond(/motivame|motivaci√≥n|motivacion|inspire/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    if (isLivechat && !canBotRespond(res.message.room, isLivechat)) {
      return;
    }

    const frases = [
      "El √©xito es la suma de peque√±os esfuerzos repetidos d√≠a tras d√≠a.",
      "La √∫nica manera de hacer un gran trabajo es amar lo que haces.",
      "No te preocupes por los fracasos, preoc√∫pate por las posibilidades que pierdes cuando ni siquiera lo intentas.",
      "El mejor momento para plantar un √°rbol era hace 20 a√±os. El segundo mejor momento es ahora.",
      "No importa lo lento que vayas, siempre y cuando no te detengas.",
      "La programaci√≥n es como una broma: si tienes que explicarla, es mala.",
    ];
    res.send(`‚ú® ${respuestaAleatoria(frases)}`);
  });

  // Comando: clima
  robot.respond(/clima(?: en)? (.*)/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    if (isLivechat && !canBotRespond(res.message.room, isLivechat)) {
      return;
    }

    const ciudad = res.match[1];
    const climas = [
      "soleado",
      "nublado",
      "lluvioso",
      "ventoso",
      "despejado",
      "tormentoso",
    ];
    const temperaturas = Math.floor(Math.random() * 35) + 5; // Entre 5 y 40 grados
    const humedad = Math.floor(Math.random() * 80) + 20; // Entre 20% y 100%

    res.send(`üå¶Ô∏è El clima en ${ciudad} es ${respuestaAleatoria(climas)}.
üå°Ô∏è Temperatura: ${temperaturas}¬∞C
üíß Humedad: ${humedad}%`);
  });

  // Comando: lanzar moneda
  robot.respond(/lanzar moneda|cara o cruz|flip coin/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    if (isLivechat && !canBotRespond(res.message.room, isLivechat)) {
      return;
    }

    const resultado = Math.random() > 0.5 ? "cara" : "cruz";
    res.send(`ü™ô He lanzado una moneda y ha salido... ¬°${resultado}!`);
  });

  // Comando: recomienda
  robot.respond(/recomienda(?:me)? (.*)/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    if (isLivechat && !canBotRespond(res.message.room, isLivechat)) {
      return;
    }

    const categoria = res.match[1].toLowerCase();

    const recomendaciones = {
      pel√≠culas: [
        "El Padrino",
        "Matrix",
        "Interestelar",
        "El Se√±or de los Anillos",
        "Pulp Fiction",
        "Inception",
        "Ciudad de Dios",
      ],
      libros: [
        "Cien a√±os de soledad",
        "1984",
        "El principito",
        "Don Quijote de la Mancha",
        "El Hobbit",
        "Fahrenheit 451",
      ],
      m√∫sica: [
        "Pink Floyd",
        "Queen",
        "The Beatles",
        "Radiohead",
        "Daft Punk",
        "Metallica",
        "Bach",
      ],
      series: [
        "Breaking Bad",
        "Game of Thrones",
        "Stranger Things",
        "Black Mirror",
        "The Office",
        "The Mandalorian",
      ],
      lenguajes: [
        "JavaScript",
        "Python",
        "Rust",
        "Go",
        "TypeScript",
        "Ruby",
        "C#",
        "Kotlin",
      ],
      comida: [
        "Sushi",
        "Pizza",
        "Tacos",
        "Hamburguesas",
        "Curry",
        "Pasta",
        "Asado",
      ],
    };

    let mensaje;
    if (recomendaciones[categoria]) {
      const recomendacion = respuestaAleatoria(recomendaciones[categoria]);
      mensaje = `üåü Mi recomendaci√≥n de ${categoria}: ${recomendacion}`;
    } else {
      mensaje = `Lo siento, no tengo recomendaciones para "${categoria}". Prueba con pel√≠culas, libros, m√∫sica, series, lenguajes o comida.`;
    }

    res.send(mensaje);
  });

  // Comando: echo
  robot.respond(/echo (.*)/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    if (isLivechat && !canBotRespond(res.message.room, isLivechat)) {
      return;
    }

    const mensaje = res.match[1];
    res.send(`üîä ${mensaje}`);
  });

  // Responder a mensajes que parecen preguntas (solo en canales normales, no Livechat)
  robot.hear(/\?(\s|$)/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    // No responder autom√°ticamente en Livechat (lo maneja livechat-ai-handler.js)
    if (isLivechat) return;

    if (Math.random() < 0.2) {
      // 20% de probabilidad de responder
      const respuestas = [
        "Esa es una buena pregunta...",
        "Hmm, d√©jame pensar...",
        "Interesante pregunta. ¬øAlguien quiere responder?",
        "¬øHas probado buscando en Google?",
        "No estoy 100% seguro, pero podr√≠a ser...",
        "La respuesta a tu pregunta es 42.",
      ];
      res.send(respuestaAleatoria(respuestas));
    }
  });

  // Respuestas a emojis comunes (solo en canales normales)
  robot.hear(/(?::|;|=)-?(?:\)|D|P)/i, function (res) {
    const isLivechat = res.message.user && res.message.user.roomType === "l";

    // No responder autom√°ticamente en Livechat
    if (isLivechat) return;

    if (Math.random() < 0.1) {
      // 10% de probabilidad de responder
      const emojis = ["üòä", "üëç", "üéâ", "‚ú®", "üôå", "ü§ñ"];
      res.send(respuestaAleatoria(emojis));
    }
  });

  console.log(
    "‚úÖ Scripts b√°sicos cargados - Compatible con sistema de handoff"
  );
};
